{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"mixerline",
				"MIXERLINE"
			],
			[
				"mixlin",
				"mixerline"
			],
			[
				"mixerge",
				"mixerGetDevCaps"
			],
			[
				"p",
				"pragma"
			],
			[
				"fal",
				"FALSE"
			],
			[
				"T",
				"TRUE"
			],
			[
				"read",
				"readnum"
			],
			[
				"byte",
				"BYTE"
			],
			[
				"UINT",
				"UINT8"
			],
			[
				"data",
				"data1"
			],
			[
				"UN",
				"UINT32"
			],
			[
				"size",
				"sizeof"
			],
			[
				"getva",
				"GETWAVEDATA"
			],
			[
				"def",
				"define"
			],
			[
				"da",
				"Data"
			],
			[
				"buff",
				"bufferFrameCount"
			],
			[
				"Fa",
				"FALSE"
			],
			[
				"IS",
				"IsDAC"
			],
			[
				"add",
				"m_BaseAddr"
			],
			[
				"Is",
				"IsDAC"
			],
			[
				"getc",
				"GetCurSel"
			],
			[
				"enab",
				"enableDrc"
			],
			[
				"s",
				"step1"
			],
			[
				"bit",
				"bit1"
			],
			[
				"fa",
				"m_fAT"
			],
			[
				"fe",
				"fES"
			],
			[
				"Updatedrc",
				"UpdateDrcCompressTByUsb"
			],
			[
				"updated",
				"UpdateDrcCompressTByUsb"
			],
			[
				"updat",
				"UpdateDrcLimitNoiseByUsb"
			],
			[
				"Udate",
				"UpdateDrcTimeByUsb"
			],
			[
				"Update",
				"UpdateDrcSetting"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "\n// mixer.cpp : 定义应用程序的类行为。\n//\n\n#include \"stdafx.h\"\n#include \"mixer.h\"\n#include \"mixerDlg.h\"\n\n#ifdef _DEBUG\n#define new DEBUG_NEW\n#endif\n\n\n// CmixerApp\n\nBEGIN_MESSAGE_MAP(CmixerApp, CWinApp)\n    ON_COMMAND(ID_HELP, &CWinApp::OnHelp)\nEND_MESSAGE_MAP()\n\n\n// CmixerApp 构造\n\nCmixerApp::CmixerApp()\n{\n    // 支持重新启动管理器\n    m_dwRestartManagerSupportFlags = AFX_RESTART_MANAGER_SUPPORT_RESTART;\n\n    // TODO: 在此处添加构造代码，\n    // 将所有重要的初始化放置在 InitInstance 中\n}\n\n\n// 唯一的一个 CmixerApp 对象\n\nCmixerApp theApp;\n\n// MMRESULT mixerGetDevCaps(\n// UINT_PTR uMxId,\n// LPMIXERCAPS pmxcaps,\n// UINT cbmxcaps\n// );\n\nvoid initMixer(void)\n{\n    // UINT mixerno = mixerGetNumDevs();\n    // UINT_PTR uMxId =0 ;\n    // LPMIXERCAPS pmxcaps;\n    // UINT cbmxcaps = sizeof(MIXERCAPS);\n    // MMRESULT mr;\n    // mr = mixerGetDevCaps(uMxId,pmxcaps,cbmxcaps);\n    MIXERCAPS     mixcaps;\n    unsigned long iNumDevs, i;\n    iNumDevs = mixerGetNumDevs();\n    for (i = 0; i < iNumDevs; i++)\n    {\n\n        if (!mixerGetDevCaps(i, &mixcaps, sizeof(MIXERCAPS)))\n        {\n\n            //printf(\"Device ID #%u: %s\\r\\n\", i, mixcaps.szPname);\n        }\n    }\n    unsigned long err;\n    HMIXER        mixerHandle;\n    WAVEFORMATEX  waveFormat;\n    HWAVEOUT      hWaveOut;\n}\n\n\n// CmixerApp 初始化\nBOOL CmixerApp::InitInstance()\n{\n    // 如果一个运行在 Windows XP 上的应用程序清单指定要\n    // 使用 ComCtl32.dll 版本 6 或更高版本来启用可视化方式，\n    //则需要 InitCommonControlsEx()。否则，将无法创建窗口。\n    INITCOMMONCONTROLSEX InitCtrls;\n    InitCtrls.dwSize = sizeof(InitCtrls);\n    // 将它设置为包括所有要在应用程序中使用的\n    // 公共控件类。\n    // initMixer();\n    InitCtrls.dwICC = ICC_WIN95_CLASSES;\n    InitCommonControlsEx(&InitCtrls);\n\n    CWinApp::InitInstance();\n\n\n    AfxEnableControlContainer();\n\n    // 创建 shell 管理器，以防对话框包含\n    // 任何 shell 树视图控件或 shell 列表视图控件。\n    CShellManager *pShellManager = new CShellManager;\n\n    // 标准初始化\n    // 如果未使用这些功能并希望减小\n    // 最终可执行文件的大小，则应移除下列\n    // 不需要的特定初始化例程\n    // 更改用于存储设置的注册表项\n    // TODO: 应适当修改该字符串，\n    // 例如修改为公司或组织名\n    SetRegistryKey(_T(\"应用程序向导生成的本地应用程序\"));\n\n    CmixerDlg dlg;\n    m_pMainWnd = &dlg;\n    INT_PTR nResponse = dlg.DoModal();\n    if (nResponse == IDOK)\n    {\n        // TODO: 在此放置处理何时用\n        //  “确定”来关闭对话框的代码\n    }\n    else if (nResponse == IDCANCEL)\n    {\n        // TODO: 在此放置处理何时用\n        //  “取消”来关闭对话框的代码\n    }\n\n    // 删除上面创建的 shell 管理器。\n    if (pShellManager != NULL)\n    {\n        delete pShellManager;\n    }\n\n    // 由于对话框已关闭，所以将返回 FALSE 以便退出应用程序，\n    //  而不是启动应用程序的消息泵。\n    return FALSE;\n}\n\n",
			"file": "mixer/mixer.cpp",
			"file_size": 2925,
			"file_write_time": 130563608227231178,
			"settings":
			{
				"buffer_size": 2452,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"contents": "\n// mixer.h : PROJECT_NAME 应用程序的主头文件\n//\n\n#pragma once\n\n#ifndef __AFXWIN_H__\n	#error \"在包含此文件之前包含“stdafx.h”以生成 PCH 文件\"\n#endif\n\n#include \"resource.h\"		// 主符号\n\n#include \"Mmsystem.h \"\n#pragma comment(lib,\"Winmm.lib\")\n// CmixerApp:\n// 有关此类的实现，请参阅 mixer.cpp\n//\n\nclass CmixerApp : public CWinApp\n{\npublic:\n	CmixerApp();\n\n// 重写\npublic:\n	virtual BOOL InitInstance();\n\n// 实现\n\n	DECLARE_MESSAGE_MAP()\n};\n\nextern CmixerApp theApp;\n",
			"file": "mixer/mixer.h",
			"file_size": 494,
			"file_write_time": 130563487640815791,
			"settings":
			{
				"buffer_size": 417,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"contents": "\n// mixerDlg.cpp : 实现文件\n//\n\n#include \"stdafx.h\"\n#include \"mixer.h\"\n#include \"mixerDlg.h\"\n#include \"afxdialogex.h\"\n\n#ifdef _DEBUG\n#define new DEBUG_NEW\n#endif\n\n\n// CmixerDlg 对话框\n\nBEGIN_DHTML_EVENT_MAP(CmixerDlg)\nDHTML_EVENT_ONCLICK(_T(\"ButtonOK\"), OnButtonOK)\nDHTML_EVENT_ONCLICK(_T(\"ButtonCancel\"), OnButtonCancel)\nEND_DHTML_EVENT_MAP()\n\n\n\nCmixerDlg::CmixerDlg(CWnd *pParent /*=NULL*/)\n    : CDHtmlDialog(CmixerDlg::IDD, CmixerDlg::IDH, pParent)\n{\n    m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);\n}\n\nvoid CmixerDlg::DoDataExchange(CDataExchange *pDX)\n{\n    CDHtmlDialog::DoDataExchange(pDX);\n}\n\nBEGIN_MESSAGE_MAP(CmixerDlg, CDHtmlDialog)\nEND_MESSAGE_MAP()\n//init mixer out\nvoid InitMixer()\n{\n    // /////enum mix device\n    // MIXERCAPS mixcaps;\n    // unsigned long iNumDevs, i;\n    // iNumDevs = mixerGetNumDevs();\n    // for (i = 0; i < iNumDevs; i++)\n    // {\n    //     if (!mixerGetDevCaps(i, &mixcaps, sizeof(MIXERCAPS)))\n    //     {\n    //         printf(\"Device ID #%u: %s\\r\\n\", i, mixcaps.szPname);\n    //     }\n    // }\n    // //////open default mix out deive；\n    unsigned long err;\n    HMIXER        mixerHandle;\n    err = mixerOpen(&mixerHandle, 0, 0, 0, 0);\n    //get detination lineinfo\n    MIXERLINE     mixerline,mixerlinesource;\n    mixerline.cbStruct = sizeof(MIXERLINE);\n    mixerline.dwDestination = 0;\n    mixerGetLineInfo((HMIXEROBJ)mixerHandle, &mixerline, MIXER_GETLINEINFOF_DESTINATION);\n    //get source lineinfo\n    for (int i = 0; i < mixerline.cConnections; ++i)\n    {\n    	mixerlinesource.cbStruct = sizeof(MIXERLINE);\n    	mixerlinesource.dwDestination = 0;\n		mixerlinesource.dwSource = i ;\n        mixerGetLineInfo((HMIXEROBJ)mixerHandle, &mixerlinesource, MIXER_GETLINEINFOF_SOURCE);\n    }\n    //mixer line control\n    MIXERLINECONTROLS  mixerlinecontrol;\n\n\n\n\n}\n\n// CmixerDlg 消息处理程序\n\nBOOL CmixerDlg::OnInitDialog()\n{\n    CDHtmlDialog::OnInitDialog();\n\n    // 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动\n    //  执行此操作\n    SetIcon(m_hIcon, TRUE);         // 设置大图标\n    SetIcon(m_hIcon, FALSE);        // 设置小图标\n\n    ShowWindow(SW_MINIMIZE);\n    InitMixer();\n\n    // TODO: 在此添加额外的初始化代码\n\n    return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE\n}\n\n// 如果向对话框添加最小化按钮，则需要下面的代码\n//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，\n//  这将由框架自动完成。\n\nvoid CmixerDlg::OnPaint()\n{\n    if (IsIconic())\n    {\n        CPaintDC dc(this); // 用于绘制的设备上下文\n\n        SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);\n\n        // 使图标在工作区矩形中居中\n        int cxIcon = GetSystemMetrics(SM_CXICON);\n        int cyIcon = GetSystemMetrics(SM_CYICON);\n        CRect rect;\n        GetClientRect(&rect);\n        int x = (rect.Width() - cxIcon + 1) / 2;\n        int y = (rect.Height() - cyIcon + 1) / 2;\n\n        // 绘制图标\n        dc.DrawIcon(x, y, m_hIcon);\n    }\n    else\n    {\n        CDHtmlDialog::OnPaint();\n    }\n}\n\n//当用户拖动最小化窗口时系统调用此函数取得光标\n//显示。\nHCURSOR CmixerDlg::OnQueryDragIcon()\n{\n    return static_cast<HCURSOR>(m_hIcon);\n}\n\nHRESULT CmixerDlg::OnButtonOK(IHTMLElement * /*pElement*/)\n{\n    OnOK();\n    return S_OK;\n}\n\nHRESULT CmixerDlg::OnButtonCancel(IHTMLElement * /*pElement*/)\n{\n    OnCancel();\n    return S_OK;\n}\n",
			"file": "mixer/mixerDlg.cpp",
			"file_size": 3442,
			"file_write_time": 130563669810246663,
			"settings":
			{
				"buffer_size": 3109,
				"line_ending": "Windows",
				"scratch": true
			}
		},
		{
			"contents": "\n// mixerDlg.h : Í·ÎÄ¼þ\n//\n\n#pragma once\n#include \"Mmsystem.h \"\n\n// CmixerDlg ¶Ô»°¿ò\nclass CmixerDlg : public CDHtmlDialog\n{\n// ¹¹Ôì\npublic:\n	CmixerDlg(CWnd* pParent = NULL);	// ±ê×¼¹¹Ôìº¯Êý\n\n// ¶Ô»°¿òÊý¾Ý\n	enum { IDD = IDD_MIXER_DIALOG, IDH = IDR_HTML_MIXER_DIALOG };\n\n	protected:\n	virtual void DoDataExchange(CDataExchange* pDX);	// DDX/DDV Ö§³Ö\n\n	HRESULT OnButtonOK(IHTMLElement *pElement);\n	HRESULT OnButtonCancel(IHTMLElement *pElement);\n\n// ÊµÏÖ\nprotected:\n	HICON m_hIcon;\n\n	// Éú³ÉµÄÏûÏ¢Ó³Éäº¯Êý\n	virtual BOOL OnInitDialog();\n	afx_msg void OnPaint();\n	afx_msg HCURSOR OnQueryDragIcon();\n	DECLARE_MESSAGE_MAP()\n	DECLARE_DHTML_EVENT_MAP()\n};\n",
			"file": "mixer/mixerDlg.h",
			"file_size": 681,
			"file_write_time": 130563674974843750,
			"settings":
			{
				"buffer_size": 647,
				"line_ending": "Windows",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 374.0,
		"selected_items":
		[
			[
				"saa",
				"File: Save All"
			],
			[
				"sa",
				"File: Save All"
			],
			[
				"main",
				"Set Syntax: MultiMarkdown"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"INSTAL",
				"Package Control: Install Package"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"set pyth",
				"Set Syntax: Python"
			],
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 362.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/F/github/mixer/mixer"
	],
	"file_history":
	[
		"/G/dota装机配置.txt",
		"/F/github/mixer/mixer/mixer/stdafx.cpp",
		"/F/github/mixer/mixer/mixer/Debug/mixer.Build.CppClean.log",
		"/F/github/mixer/mixer/mixer/Debug/cl.command.1.tlog",
		"/F/github/mixer/mixer/mixer/Debug/CL.read.1.tlog",
		"/F/github/mixer/mixer/ipch/mixer-6335c2fd/mixer-8efdfdd1.ipch",
		"/F/github/mixer/mixer/mixer/mixer.h",
		"/F/github/mixer/mixer/mixer/Debug/rc.command.1.tlog",
		"/F/github/mixer/mixer/mixer.opensdf",
		"/F/github/audioplayer/audioplayer/audioplayer/captureWASAPI.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/coreaudiorender.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/audioplayerDlg.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/audioplayerDlg.h",
		"/F/github/audioplayer/wavsource/caiqin.wav",
		"/F/github/audioplayer/wavsource/WASAPICapture-{DE8B3105-23B9-46D4-958C-8E111C1AECC7}.wav",
		"/F/github/audioplayer/audioplayer/audioplayer/coreaudiorender.h",
		"/F/github/audioplayer/audioplayer/audioplayer/WASAPICaptureTimerDriven-{4AA42611-90A5-4C4A-8CAB-C4ACF243D000}.WAV",
		"/F/github/audioplayer/audioplayer/audioplayer/recordaWASAPI.h",
		"/F/github/audioplayer/audioplayer/audioplayer/recordaWASAPI.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/define.h",
		"/F/github/audioplayer/audioplayer/audioplayer/resource.h",
		"/F/github/audioplayer/audioplayer/audioplayer/Debug/link.command.1.tlog",
		"/C/Program Files/Sublime Text 3/recordaWASAPI.h",
		"/C/Program Files/Sublime Text 3/recordaWASAPI.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/audioplayer.h",
		"/F/github/audioplayer/audioplayer/audioplayer/audioplayer.aps",
		"/F/github/audioplayer/audioplayer/audioplayer/CWaveFile.h",
		"/F/github/audioplayer/audioplayer/audioplayer/Debug/audioplayer.lastbuildstate",
		"/C/Users/rickon/Desktop/RenderSharedEventDriven/ToneGen.h",
		"/C/Users/rickon/Desktop/RenderSharedEventDriven/WASAPIRenderer.cpp",
		"/C/Users/rickon/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/F/github/audioplayer/audioplayer/audioplayer/ReadMe.txt",
		"/C/Users/rickon/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/F/github/audioplayer/audioplayer/audioplayer/audioplayer.cpp",
		"/C/Users/rickon/Desktop/RenderSharedTimerDriven/WASAPIRenderer.cpp",
		"/C/Users/rickon/Desktop/RenderSharedTimerDriven/WASAPIRenderer.h",
		"/C/Users/rickon/Desktop/RenderSharedTimerDriven/WASAPIRenderSharedTimerDriven.cpp",
		"/F/github/audioplayer/audioplayer/audioplayer/res/define.h",
		"/F/github/core-audio-apis/coreaudio/coreaudiorender.h",
		"/F/github/core-audio-apis/coreaudio/coreaudiorender.cpp",
		"/F/github/core-audio-apis/coreaudio/coreaudio.h",
		"/F/github/core-audio-apis/coreaudio/coreaudio.cpp",
		"/C/Users/rickon/Desktop/之秋自述-摄影师的爱好.txt",
		"/F/github/core-audio-apis/coreaudio/getwave.cpp",
		"/F/github/core-audio-apis/coreaudio/notification.h",
		"/F/github/core-audio-apis/coreaudio/CWaveFile.h",
		"/F/github/core-audio-apis/coreaudio/coreaudiocaoture.cpp",
		"/F/github/core-audio-apis/coreaudio/coreaudiocaoture.h",
		"/F/github/core-audio-apis/coreaudio/CWaveFile.cpp",
		"/C/Users/rickon/Desktop/caiqin.wav",
		"/E/CloudMusic/蔡琴 - 被遗忘的时光.mp3",
		"/C/Users/rickon/Desktop/3.WAV",
		"/C/Users/rickon/Desktop/1.wav",
		"/C/Users/rickon/Desktop/anheqiao.wav",
		"/F/github/core-audio-apis/coreaudio/coreaudio.vcxproj",
		"/F/github/core-audio-apis/coreaudio/coreaudio.vcxproj.filters",
		"/C/Users/rickon/Desktop/02.pcm",
		"/C/Users/rickon/Desktop/01.wav",
		"/C/Users/rickon/Desktop/sample.cpp",
		"/C/Users/rickon/Desktop/03.wav",
		"/C/Users/rickon/Desktop/逃跑计划 - 一万次悲伤.wav",
		"/F/github/core-audio-apis/coreaudio/coreaudio.cpp.back.cpp",
		"/C/Users/rickon/Desktop/2.wav",
		"/C/Users/rickon/Desktop/CWaveFile_src/CWaveFile.h",
		"/C/Users/rickon/AppData/Roaming/baidu/BaiduYunGuanjia/sounds/1.wav",
		"/C/Users/rickon/Desktop/CWaveFile_src/filemap.h",
		"/C/Users/rickon/Desktop/1.mp3",
		"/C/Users/rickon/Desktop/1.pcm",
		"/C/Users/rickon/Desktop/C++/WASAPICapture.cpp",
		"/F/github/MicMuter/MicMuter2/main.cpp",
		"/C/Users/rickon/Desktop/C++/MFSampleGenerator.cpp",
		"/C/Users/rickon/Desktop/C++/WASAPIRenderer.h",
		"/C/Users/rickon/Desktop/C++/WASAPIRenderer.cpp",
		"/C/Users/rickon/AppData/Local/Microsoft/VisualStudio/11.0/Extensions/l4favh5k.vvo/Sample/DirectXTK/Audio/AudioEngine.cpp",
		"/F/c/coreaudio/coreaudio/coreaudio/stdafx.h",
		"/F/c/coreaudio/coreaudio/coreaudio/targetver.h",
		"/F/c/coreaudio/coreaudio/coreaudio/stdafx.cpp",
		"/F/c/coreaudio/coreaudio/coreaudio/coreaudio.cpp",
		"/F/github/python/audio/wave.py",
		"/F/github/python/usbtest.py",
		"/F/DRC/RegTool v8.2beta1/VTool.ini",
		"/C/Python27/Lib/site-packages/pywinusb/hid/winapi.py",
		"/C/Python27/Lib/site-packages/pywinusb/hid/tools.py",
		"/F/github/python/usb.py",
		"/F/github/pyusb/docs/tutorial.rst",
		"/C/Python27/Lib/site-packages/pywinusb/hid/helpers.py",
		"/F/github/MicMuter/README.md",
		"/F/github/python/testmast.py",
		"/F/github/python/test.py",
		"/F/DRC/DRCCtlUSBV2/DrcCpl/DrcUSBInterface.cpp",
		"/F/DRC/DRCCtlUSBV2/DrcCpl/DrcCplDlg.cpp",
		"/F/DRC/DRCCtlUSBV2/DrcCpl/PolicyConfig.h",
		"/F/DRC/AudioDrcTool/AudioDrcTool/src/com/android/audiodrctool/DrcMainActivity.java",
		"/F/DRC/AudioDrcTool/AudioDrcTool/src/com/android/audiodrctool/DrawView.java",
		"/C/Users/rickon/Desktop/mail.txt",
		"/F/python/opensvn.py",
		"/C/Python27/Lib/site-packages/setuptools/tests/test_svn.py",
		"/C/Python27/Tools/Scripts/svneol.py",
		"/F/c/helloworld/test/test.cpp",
		"/F/DRC/DRCCtlUSBV2/DrcCpl/DrcCplDlg.h",
		"/C/Users/rickon/Desktop/HDConfig.via",
		"/F/DRC/DRCCtlUSBV2/Release/README.txt",
		"/F/DRC/DRCCtlUSBV2/DrcCpl/DrcUSBInterface.h",
		"/C/Users/rickon/Desktop/REGConfig.via",
		"/F/DRC/DrcCtlUSB/DrcCpl/DrcUSBInterface.cpp",
		"/F/DRC/DrcCpl/DrcCpl/DrcUSBInterface.cpp",
		"/F/DRC/DrcCpl/DrcCpl/DrcUSBInterface.h",
		"/F/DRC/AudioDrcTool/AudioDrcTool/jni/drcapi/jni/DrcDsp.cpp",
		"/G/RegTool v8.2beta1/VTool.ini",
		"/F/DRC/DrcCpl/DrcCpl/DrcCplDlg.cpp",
		"/F/DRC/AudioDrcTool/AudioDrcTool/src/com/android/audiodrctool/DrcApi.java",
		"/F/DRC/addusb/DrcUSBInterface.h",
		"/F/DRC/addusb/DrcUSBInterface.cpp",
		"/F/DRC/HWEQForVT3471/ViaHidApi.h",
		"/F/DRC/HWEQForVT3471/EqInterface.h",
		"/F/DRC/HWEQForVT3471/EqInterface.cpp",
		"/F/DRC/DrcCpl/DrcCpl/ViaHidApi.h",
		"/F/DRC/HWEQForVT3471/VIADev.h",
		"/F/DRC/HWEQForVT3471/Flash.h",
		"/F/DRC/DrcCpl/DrcCpl/DrcDsp.cpp",
		"/F/DRC/HWEQForVT3471/EQDefines.h",
		"/F/DRC/HWEQForVT3471/EqGraphCpl.sln",
		"/F/DRC/HWEQForVT3471/EqGraphCplDlg.h",
		"/F/DRC/HWEQForVT3471/EqGraphCplDlg.cpp",
		"/F/python/audiotest.py",
		"/F/python/1.py",
		"/C/Users/rickon/AppData/Roaming/Sublime Text 3/Packages/User/Base File.sublime-settings",
		"/C/Users/rickon/AppData/Roaming/Sublime Text 3/Packages/DocBlockr/Base File.sublime-settings"
	],
	"find":
	{
		"height": 33.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"mixerlinesource",
			"mixerline",
			"onini",
			"SaveWaveData",
			"filedate",
			"fp",
			"flags",
			"pM",
			"flags",
			"DWORD taskIndex = 0;\n    hTask = AvSetMmThreadCharacteristics(TEXT(\"Pro Audio\"), &taskIndex);",
			"AvSetMmThreadCharacteristics",
			"Pro Audio",
			"_AudioSamplesReadyEvent",
			"_ShutdownEvent",
			"_AudioSamplesReadyEvent",
			"_StreamSwitchEvent",
			"_ShutdownEvent",
			"_InStreamSwitch",
			"Shutdown",
			"shutdown",
			"Shutdown",
			"shutdown",
			"CreateEventEx",
			"device",
			"InterlockedIncrement",
			"CWASAPIRenderer",
			"main",
			"filedate",
			"_RenderBufferQueue",
			"renderBuffer",
			"_RenderBufferQueue",
			"Start",
			"RenderBuffer",
			"CWASAPIRenderer",
			"CoreAudioRender",
			"datelen",
			"UNIT",
			"m_pMainWnd",
			"CaudioplayerDlg",
			"frp",
			"audioplayerDlg.h",
			"coreaudiorender.h",
			"coreaudiorender",
			"scdu",
			"fseek",
			"m_sld##Key",
			"m_sld",
			"this->fp",
			"fp",
			"CMMNotificationClient",
			"pData",
			"readnum",
			"wavefx",
			"pwfx",
			"OnDeviceAdded",
			"capture",
			"EXIT_ON_ERROR",
			"GetWaveData",
			"EXIT_ON_ERROR",
			"h",
			"EXIT_ON_ERROR",
			"temp",
			"data1[i]",
			"data1",
			"memcpy",
			"temp8",
			"EXIT_ON_ERROR",
			"CoTaskMemFree",
			"numFramesAvailable",
			"pAudioClient",
			"hr = ",
			"hnsActualDuration",
			"EXIT_ON_ERROR",
			"GetService",
			"short",
			"Activate",
			"device",
			"),\n",
			"Activate",
			"initialize",
			"WAVEFORMATEXTENSIBLE",
			"usb",
			"init",
			"m_fAT",
			"SYNC_SLD_EDIT_SLOPE_VALUE",
			"INIT_SLD_SLOPE_CTRL",
			"Init",
			"CDrcCplDlg",
			"m_sldNT",
			"INIT_SLD_CTRL",
			"SetRange",
			"IDC_SLIDER",
			"bRedraw",
			"SLIDER",
			"m_SeekBarExpanderSlope",
			"m_EditTextExpanderSlope",
			"main",
			"ReadRegByte",
			"type",
			"req",
			"PANEL",
			"sDev",
			"UpdateDrcSetting",
			"DAC",
			"INIT_SLD_SLOPE_CTRL_PROP",
			"ADCPams",
			"INIT_SLD_CTRL_PROP",
			"ADCPams",
			"INIT_SLD_SLOPE_CTRL_Value",
			"INIT_SLD_CTRL_Value",
			"selct",
			"init",
			"WriteAllHWDrc",
			"OnCbnSelchangeComboEp",
			"SAVE_ADCDRC_KEY",
			"OnBnClickedButton2",
			"0x93",
			"0x0a59",
			"0x9c",
			"0x02",
			"UpdateDrcSetting",
			"CHwDrcVerb",
			"WriteAllHWDrc",
			"UpdateDrcSetting",
			"m_listSR",
			"96",
			"48",
			"16"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mixer/mixer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2452,
						"regions":
						{
						},
						"selection":
						[
							[
								268,
								268
							]
						],
						"settings":
						{
							"clone_numbers": 2,
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "mixer/mixer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 417,
						"regions":
						{
						},
						"selection":
						[
							[
								254,
								254
							]
						],
						"settings":
						{
							"clone_numbers": 1,
							"history_list_is_closing": true,
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 0,
					"file": "mixer/mixer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2452,
						"regions":
						{
						},
						"selection":
						[
							[
								680,
								680
							]
						],
						"settings":
						{
							"clone_numbers": 2,
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 434.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "mixer/mixerDlg.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3109,
						"regions":
						{
						},
						"selection":
						[
							[
								866,
								866
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 405.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "mixer/mixerDlg.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 647,
						"regions":
						{
						},
						"selection":
						[
							[
								60,
								60
							]
						],
						"settings":
						{
							"in_converting": true,
							"origin_encoding": "GB2312",
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mixer/mixer.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2452,
						"regions":
						{
						},
						"selection":
						[
							[
								1525,
								1526
							]
						],
						"settings":
						{
							"clone_numbers": 2,
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "mixer/mixer.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 417,
						"regions":
						{
						},
						"selection":
						[
							[
								156,
								156
							]
						],
						"settings":
						{
							"clone_numbers": 1,
							"history_list_is_closing": true,
							"in_converting": true,
							"origin_encoding": "GB2312",
							"revert_to_scratch": true,
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 55.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 186.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "mixersubl.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"mixdlgcpp",
				"mixer\\mixerDlg.cpp"
			],
			[
				"mixercpp",
				"mixer\\mixer.cpp"
			],
			[
				"mixdl",
				"mixer\\mixerDlg.h"
			],
			[
				"mixerh",
				"mixer\\mixer.h"
			],
			[
				"mixercp",
				"mixer\\mixer.cpp"
			],
			[
				"mixcpp",
				"mixer\\mixer.cpp"
			],
			[
				"mixh",
				"mixer\\mixer.h"
			],
			[
				"",
				"F:\\github\\audioplayer\\wavsource\\caiqin.wav"
			],
			[
				"rendcpp",
				"coreaudiorender.cpp"
			],
			[
				"rend",
				"coreaudiorender.cpp"
			],
			[
				"def",
				"define.h"
			],
			[
				"dlg",
				"audioplayerDlg.cpp"
			],
			[
				"render",
				"coreaudiorender.cpp"
			],
			[
				"audiodlgh",
				"audioplayerDlg.h"
			],
			[
				"ren",
				"coreaudiorender.cpp"
			],
			[
				"addlg",
				"audioplayer\\audioplayerDlg.cpp"
			],
			[
				"cwav",
				"CWaveFile.h"
			],
			[
				"eqin",
				"EqInterface.cpp"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 242.0,
		"selected_items":
		[
			[
				"ni",
				"OnInitDialog"
			],
			[
				"rende",
				"CoreAudioRender"
			],
			[
				"save",
				"SaveWaveData"
			],
			[
				"butt",
				"OnBnClickedButton4"
			],
			[
				"rend",
				"CoreAudioRender"
			],
			[
				"butto",
				"OnBnClickedButton1"
			],
			[
				"butt1",
				"IDC_BUTTON1"
			],
			[
				"bu",
				"OnBnClickedButton2"
			],
			[
				"onbu",
				"OnBnClickedButton1"
			],
			[
				"main",
				"wmain"
			],
			[
				"render",
				"CoreAudioRender"
			]
		],
		"width": 360.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 147.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
